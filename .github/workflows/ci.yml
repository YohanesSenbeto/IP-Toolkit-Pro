name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build-test:
    name: Lint, Type Check & Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Lint
        run: npm run lint -- --max-warnings=0

      - name: Type Check
        run: npx tsc --noEmit

      - name: Run Unit & Component Tests
        run: npm run test -- --run
        env:
          NODE_ENV: test

      - name: Coverage (single node version)
        if: matrix.node-version == '20.x'
        run: npm run test:coverage -- --reporter=text --reporter=lcov
        env:
          NODE_ENV: test

      - name: Upload coverage artifact
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  # Optional: schema drift check (lightweight)
  prisma-validate:
    name: Prisma Format & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        run: npm ci
      - name: Prisma format
        run: npx prisma format --schema=prisma/schema.prisma
      - name: Prisma validate
        run: npx prisma validate
